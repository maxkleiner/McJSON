Version:0.9
StartHTML:0000000105
EndHTML:0000113839
StartFragment:0000000141
EndFragment:0000113803
<html>
<head>
<meta charset="utf-8">
</head>
<body>
<!--StartFragment--><div style="font-family: Courier New, 'Courier New', monospace; font-size: 7pt; white-space: pre; "><div><span style="color: #000080; font-style: italic; ">//****************Shell&nbsp;Console&nbsp;REST&nbsp;API&nbsp;Tester**************************&nbsp;üêû</span></div><div><span style="color: #000000; font-weight: bold; ">program</span><span>&nbsp;RESTcountries_Composer1_64bit_UC_51_mcJSON</span><span style="color: #800080; ">;<br></span></div><div><span style="color: #000080; font-style: italic; ">//https://software.hixie.ch/utilities/cgi/unicode-decoder/utf8-decoder<br><br>//API&nbsp;Endpoints&nbsp;v3&nbsp;‚òÆ&nbsp;‚úû&nbsp;œÄ&nbsp;üìå<br>//https://restcountries.com/<br><br>//https://github.com/apilayer/restcountries<br>//http://www.softwareschule.ch/examples/json7.txt<br>//https://github.com/maxkleiner/McJSON/tree/main/test<br>//https://medium.com/nerd-for-tech/restcountries-api-b6d96deee121<br></span></div><div><span style="color: #000000; font-weight: bold; ">Const</span><span>&nbsp;<br>&nbsp;&nbsp;WeatherAPIKEY</span><span style="color: #800080; ">=</span><span style="color: #008080; ">'55013bf3d09cfb0619989a00ed5bed09'</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;URLWeatherAPI</span><span style="color: #800080; ">=</span><span style="color: #008080; ">'https://api.openweathermap.org/data/2.5/weather?q=%s&amp;units=metric&amp;appid=%s'</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;RESTCountries&nbsp;</span><span style="color: #800080; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'https://restcountries.com/v3.1/name/%s'</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;RESTCountriesC&nbsp;</span><span style="color: #800080; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'https://restcountries.com/v2/capital/%s'</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;</span></div><div><span style="color: #000000; font-weight: bold; ">function</span><span>&nbsp;GetWeatherStreamJSON</span><span style="color: #800080; ">(</span><span style="color: #000000; font-weight: bold; ">const</span><span>&nbsp;Data</span><span style="color: #800080; ">,</span><span>&nbsp;APIKEY</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">):</span><span>&nbsp;string</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">var</span><span>&nbsp;encodURL</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #800080; ">:</span><span>&nbsp;TStringStream</span><span style="color: #800080; ">;</span><span>&nbsp;jo</span><span style="color: #800080; ">:</span><span>&nbsp;TJSONObject</span><span style="color: #800080; ">;</span><span>&nbsp;</span></div><div><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;encodURL</span><span style="color: #800080; ">:=</span><span>&nbsp;Format</span><span style="color: #800080; ">(</span><span>URLWeatherAPI</span><span style="color: #800080; ">,[</span><span>HTTPEncode</span><span style="color: #800080; ">(</span><span>Data</span><span style="color: #800080; ">),</span><span>&nbsp;APIKEY</span><span style="color: #800080; ">]);</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;mapStrm</span><span style="color: #800080; ">:=</span><span>&nbsp;TStringStream</span><span style="color: #800080; ">.</span><span>create</span><span style="color: #800080; ">(</span><span style="color: #008080; ">''</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;HttpGet</span><span style="color: #800080; ">(</span><span>EncodURL</span><span style="color: #800080; ">,</span><span>&nbsp;mapStrm</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//WinInet</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #800080; ">.</span><span>Position</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;jo</span><span style="color: #800080; ">:=</span><span>&nbsp;TJSONObject</span><span style="color: #800080; ">.</span><span>Create4</span><span style="color: #800080; ">(</span><span>mapStrm</span><span style="color: #800080; ">.</span><span>datastring</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;result</span><span style="color: #800080; ">:=</span><span>&nbsp;jo</span><span style="color: #800080; ">.</span><span>getjsonarray</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'weather'</span><span style="color: #800080; ">).</span><span>getjsonobject</span><span style="color: #800080; ">(</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">).</span><span>getstring</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'description'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;result</span><span style="color: #800080; ">:=</span><span>&nbsp;result</span><span style="color: #800080; ">+</span><span style="color: #008080; ">'&nbsp;'</span><span style="color: #800080; ">+</span><span>jo</span><span style="color: #800080; ">.</span><span>getjsonobject</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'main'</span><span style="color: #800080; ">).</span><span>getstring</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'temp'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">except</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'Error:&nbsp;'</span><span style="color: #800080; ">+</span><span>mapstrm</span><span style="color: #800080; ">.</span><span>datastring</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'E:&nbsp;'</span><span style="color: #800080; ">+</span><span>ExceptiontoString</span><span style="color: #800080; ">(</span><span>exceptiontype</span><span style="color: #800080; ">,</span><span>&nbsp;exceptionparam</span><span style="color: #800080; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #800080; ">.</span><span>Free</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;encodURL</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">''</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;jo</span><span style="color: #800080; ">.</span><span>Free</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;<br><br></span></div><div><span style="color: #000000; font-weight: bold; ">function</span><span>&nbsp;Test99</span><span style="color: #800080; ">(</span><span style="color: #000000; font-weight: bold; ">out</span><span>&nbsp;Msg</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">):</span><span>&nbsp;Boolean</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;Json</span><span style="color: #800080; ">:</span><span>&nbsp;TMcJsonItem</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;i</span><span style="color: #800080; ">:</span><span>&nbsp;Integer</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;Msg&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">'Test:&nbsp;Github&nbsp;readme.md&nbsp;content&nbsp;ex.&nbsp;99'</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;Json&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;TMcJsonItem</span><span style="color: #800080; ">.</span><span>Create</span><span style="color: #800080; ">();</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;add&nbsp;some&nbsp;pairs.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>Add</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'key1'</span><span style="color: #800080; ">).</span><span>AsInteger&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">1</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>Add</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'key2'</span><span style="color: #800080; ">).</span><span>AsBoolean&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;True</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>Add</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'key3'</span><span style="color: #800080; ">).</span><span>AsNumber&nbsp;&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #FF6347; ">1.234</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>Add</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'key4'</span><span style="color: #800080; ">).</span><span>AsString&nbsp;&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">'value&nbsp;1'</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;add&nbsp;an&nbsp;array</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>Add1</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'array'</span><span style="color: #800080; ">,</span><span>&nbsp;jitArray</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">for</span><span>&nbsp;i&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">1</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;</span><span style="color: #FF0000; ">3</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">do</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'array'</span><span style="color: #800080; ">].</span><span>Add</span><span style="color: #800080; ">(</span><span style="color: #008080; ">''</span><span style="color: #800080; ">).</span><span>AsInteger&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;i</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;save&nbsp;a&nbsp;backup&nbsp;to&nbsp;file</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">if</span><span>&nbsp;</span><span style="color: #800080; ">(</span><span>Json</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'array'</span><span style="color: #800080; ">].</span><span>Count&nbsp;</span><span style="color: #800080; ">=</span><span>&nbsp;</span><span style="color: #FF0000; ">3</span><span style="color: #800080; ">)</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">then</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>SaveToFile</span><span style="color: #800080; ">(</span><span>exepath</span><span style="color: #800080; ">+</span><span style="color: #008080; ">'examples\test99.json'</span><span style="color: #800080; ">,</span><span>&nbsp;true</span><span style="color: #800080; ">,</span><span>&nbsp;true</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;remove&nbsp;an&nbsp;item</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>Delete1</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'array'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;oops,&nbsp;load&nbsp;the&nbsp;backup</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">if</span><span>&nbsp;</span><span style="color: #800080; ">(</span><span>Json</span><span style="color: #800080; ">.</span><span>Count&nbsp;</span><span style="color: #800080; ">=</span><span>&nbsp;</span><span style="color: #FF0000; ">4</span><span style="color: #800080; ">)</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">then</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>LoadFromFile</span><span style="color: #800080; ">(</span><span>exepath</span><span style="color: #800080; ">+</span><span style="color: #008080; ">'examples\test99.json'</span><span style="color: #800080; ">,</span><span>&nbsp;true</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;test&nbsp;final&nbsp;result</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #800080; ">(</span><span>Json</span><span style="color: #800080; ">.</span><span>AsJSON</span><span style="color: #800080; ">=</span><span>&nbsp;</span><span style="color: #008080; ">'{&quot;key1&quot;:1,&quot;key2&quot;:true,&quot;key3&quot;:1.234,&quot;key4&quot;:&quot;value&nbsp;1&quot;,&quot;array&quot;:[1,2,3]}'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(formatjson(Json.AsJson));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;False</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Json</span><span style="color: #800080; ">.</span><span>Free</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;<br></span></div><div><span style="color: #000080; font-style: italic; ">//https://stackoverflow.com/questions/22394748/json-conversion-error-expected-after-key<br>//{{&quot;x&quot;&nbsp;:&nbsp;100,&nbsp;&quot;y&quot;&nbsp;:&nbsp;90},{&quot;x&quot;&nbsp;:&nbsp;100,&nbsp;&quot;y&quot;&nbsp;:&nbsp;85}}<br>//Use&nbsp;[]&nbsp;not&nbsp;{}&nbsp;as&nbsp;the&nbsp;outer&nbsp;brackets,&nbsp;or&nbsp;:[{&nbsp;--&gt;&nbsp;:{{<br></span></div><div><span style="color: #000000; font-weight: bold; ">procedure</span><span>&nbsp;TRestOnResponseEvent2</span><span style="color: #800080; ">(</span><span>ARestClient</span><span style="color: #800080; ">:</span><span>&nbsp;TRestClient</span><span style="color: #800080; ">;</span><span>&nbsp;ResponseCode</span><span style="color: #800080; ">:</span><span>&nbsp;Integer</span><span style="color: #800080; ">;</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">const</span><span>&nbsp;ResponseContent</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;<br>&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'@addr&nbsp;of:'</span><span style="color: #800080; ">+</span><span>objtostr</span><span style="color: #800080; ">(</span><span>arestclient</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln('response&nbsp;cont:&nbsp;'+responsecontent)</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'response&nbsp;code:&nbsp;'</span><span style="color: #800080; ">+</span><span>itoa</span><span style="color: #800080; ">(</span><span>responsecode</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'enabled&nbsp;compression&nbsp;'</span><span style="color: #800080; ">+</span><span>botostr</span><span style="color: #800080; ">(</span><span>arestclient</span><span style="color: #800080; ">.</span><span>EnabledCompression</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'content-encoding:'</span><span style="color: #800080; ">+</span><span>arestclient</span><span style="color: #800080; ">.</span><span>responseheader</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'Content-Encoding'</span><span style="color: #800080; ">]);</span></div><div><span>&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'verifycert:&nbsp;'</span><span style="color: #800080; ">+</span><span>botostr</span><span style="color: #800080; ">(</span><span>arestclient</span><span style="color: #800080; ">.</span><span>verifycert</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br></span></div><div><span style="color: #000000; font-weight: bold; ">function</span><span>&nbsp;GetRestCountries_mcJSON3</span><span style="color: #800080; ">(</span><span style="color: #000000; font-weight: bold; ">const</span><span>&nbsp;URLCountry</span><span style="color: #800080; ">,</span><span>&nbsp;Datafeed</span><span style="color: #800080; ">,</span><span>&nbsp;APIKEY</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">;</span><span>&nbsp;map</span><span style="color: #800080; ">:</span><span>&nbsp;boolean</span><span style="color: #800080; ">):</span><span>&nbsp;string</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">var</span><span>&nbsp;encodURL</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #800080; ">:</span><span>&nbsp;TStringStream</span><span style="color: #800080; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//jconv:TJSONConverter&nbsp;;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;job</span><span style="color: #800080; ">:</span><span>&nbsp;TJSON</span><span style="color: #800080; ">;</span><span>&nbsp;N</span><span style="color: #800080; ">:</span><span>&nbsp;TMcJsonItem</span><span style="color: #800080; ">;</span><span>&nbsp;arest</span><span style="color: #800080; ">:</span><span>&nbsp;TRestResource</span><span style="color: #800080; ">;</span><span>&nbsp;savestr</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//datafeed:=&nbsp;'France';</span></div><div><span>&nbsp;&nbsp;encodURL</span><span style="color: #800080; ">:=</span><span>&nbsp;Format</span><span style="color: #800080; ">(</span><span>URLCountry</span><span style="color: #800080; ">,[</span><span>HTTPEncode</span><span style="color: #800080; ">(</span><span>Datafeed</span><span style="color: #800080; ">),</span><span>&nbsp;APIKEY</span><span style="color: #800080; ">]);</span><span>&nbsp;<br>&nbsp;&nbsp;mapStrm</span><span style="color: #800080; ">:=</span><span>&nbsp;TStringStream</span><span style="color: #800080; ">.</span><span>create</span><span style="color: #800080; ">(</span><span style="color: #008080; ">''</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">with</span><span>&nbsp;TRestClient</span><span style="color: #800080; ">.</span><span>create</span><span style="color: #800080; ">(</span><span>self</span><span style="color: #800080; ">)</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arest</span><span style="color: #800080; ">:=</span><span>&nbsp;Resource</span><span style="color: #800080; ">(</span><span>EncodURL</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//HttpGet(EncodURL,&nbsp;mapStrm);&nbsp;//WinInet</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arest</span><span style="color: #800080; ">.</span><span>ContentType</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'application/json;&nbsp;charset=utf-8'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'content&nbsp;types&nbsp;'</span><span style="color: #800080; ">+</span><span>arest</span><span style="color: #800080; ">.</span><span>GetContentTypes</span><span style="color: #800080; ">);</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//arest.Authorization('Bearer&nbsp;'+MAPGPT_APIKEY2);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConnectionType</span><span style="color: #800080; ">:=</span><span>&nbsp;hctWinInet</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OnResponse</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #800080; ">@</span><span>TRestOnResponseEvent2</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//arest.post(mapStrm)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;savestr</span><span style="color: #800080; ">:=</span><span>&nbsp;aRest</span><span style="color: #800080; ">.</span><span>get</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SaveStringToStreamUTF8</span><span style="color: #800080; ">(</span><span>savestr</span><span style="color: #800080; ">,</span><span>&nbsp;mapstrm</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'cont&nbsp;size:&nbsp;'</span><span style="color: #800080; ">+</span><span>itoa</span><span style="color: #800080; ">(</span><span>mapstrm</span><span style="color: #800080; ">.</span><span>size</span><span style="color: #800080; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #800080; ">.</span><span>Position</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'Format&nbsp;JSON()___________________'</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span>formatJson2</span><span style="color: #800080; ">(</span><span>savestr</span><span style="color: #800080; ">,</span><span>&nbsp;</span><span style="color: #FF0000; ">4</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job</span><span style="color: #800080; ">:=</span><span>&nbsp;TJSON</span><span style="color: #800080; ">.</span><span>Create</span><span style="color: #800080; ">();</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;job</span><span style="color: #800080; ">.</span><span>parse</span><span style="color: #800080; ">(</span><span>savestr</span><span style="color: #800080; ">);</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(parsejsonvalue(job.stringify))</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'trans&nbsp;count:&nbsp;'</span><span style="color: #800080; ">+</span><span>itoa</span><span style="color: #800080; ">(</span><span>job</span><span style="color: #800080; ">.</span><span>jsonarray</span><span style="color: #800080; ">[</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">].</span><span>asobject</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'translations'</span><span style="color: #800080; ">].</span><span>asobject</span><span style="color: #800080; ">.</span><span>count</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>job</span><span style="color: #800080; ">.</span><span>jsonarray</span><span style="color: #800080; ">[</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">].</span><span>asobject</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'translations'</span><span style="color: #800080; ">].</span><span>asobject</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'ara'</span><span style="color: #800080; ">].</span><span>asobject</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'official'</span><span style="color: #800080; ">].</span><span>asstring</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>job</span><span style="color: #800080; ">.</span><span>jsonarray</span><span style="color: #800080; ">[</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">].</span><span>asobject</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'translations'</span><span style="color: #800080; ">].</span><span>asobject</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'ces'</span><span style="color: #800080; ">].</span><span>asobject</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'common'</span><span style="color: #800080; ">].</span><span>asstring</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'enctype:'</span><span style="color: #800080; ">+</span><span>itoa</span><span style="color: #800080; ">(</span><span>ord</span><span style="color: #800080; ">(</span><span>DetectUTF8Encoding</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'√Ö&nbsp;v√É¬Ωcarsk√É&nbsp;'</span><span style="color: #800080; ">))));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'enctype:'</span><span style="color: #800080; ">+</span><span>itoa</span><span style="color: #800080; ">(</span><span>ord</span><span style="color: #800080; ">(</span><span>DetectUTF8Encoding</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'„Çπ„Ç§„ÇπÈÄ£ÈÇ¶'</span><span style="color: #800080; ">))));</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N</span><span style="color: #800080; ">:=</span><span>&nbsp;TMcJsonItem</span><span style="color: #800080; ">.</span><span>Create</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N</span><span style="color: #800080; ">.</span><span>AsJSON&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;savestr</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//'{&quot;i&quot;:123,&quot;f&quot;:123.456,&quot;s&quot;:&quot;abc&quot;,&quot;b&quot;:true,&quot;n&quot;:null}';</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//N.AsJSON&nbsp;:=&nbsp;'{&quot;o&quot;:&nbsp;{&quot;k1&quot;:&quot;v1&quot;,&nbsp;&quot;k2&quot;:&quot;v2&quot;}}';</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//N.Path('o.k2').AsString&nbsp;:=&nbsp;'value2';</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span>N</span><span style="color: #800080; ">.</span><span>Path</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'name/translations/fra/official'</span><span style="color: #800080; ">).</span><span>AsString</span><span style="color: #800080; ">);</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//:=&nbsp;'value2';</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'population:&nbsp;'</span><span style="color: #800080; ">+</span><span>N</span><span style="color: #800080; ">.</span><span>Path</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'name/population'</span><span style="color: #800080; ">).</span><span>asstring</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'area:&nbsp;'</span><span style="color: #800080; ">+</span><span>N</span><span style="color: #800080; ">.</span><span>Path</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'name/area'</span><span style="color: #800080; ">).</span><span>asstring</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'Gini&nbsp;index&nbsp;2018:&nbsp;'</span><span style="color: #800080; ">+</span><span>N</span><span style="color: #800080; ">.</span><span>Path</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'name/gini/2018'</span><span style="color: #800080; ">).</span><span>asstring</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'name&nbsp;count&nbsp;'</span><span style="color: #800080; ">+</span><span>itoa</span><span style="color: #800080; ">(</span><span>N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">].</span><span>count</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'trans&nbsp;count&nbsp;'</span><span style="color: #800080; ">+</span><span>itoa</span><span style="color: #800080; ">(</span><span>N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'translations'</span><span style="color: #800080; ">].</span><span>count</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'trans&nbsp;item&nbsp;test&nbsp;'</span><span style="color: #800080; ">+</span><span>N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'translations'</span><span style="color: #800080; ">].</span><span>keys</span><span style="color: #800080; ">[</span><span style="color: #FF0000; ">2</span><span style="color: #800080; ">]);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">for</span><span>&nbsp;it</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'translations'</span><span style="color: #800080; ">].</span><span>count</span><span style="color: #800080; ">-</span><span style="color: #FF0000; ">1</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">do</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'langitem:&nbsp;'</span><span style="color: #800080; ">+</span><span>itoa</span><span style="color: #800080; ">(</span><span>it</span><span style="color: #800080; ">+</span><span style="color: #FF0000; ">1</span><span style="color: #800080; ">)+</span><span style="color: #0066CC; text-decoration: underline; ">#9</span><span style="color: #800080; ">+</span><span>N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'translations'</span><span style="color: #800080; ">].</span><span>items</span><span style="color: #800080; ">[</span><span>it</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'official'</span><span style="color: #800080; ">].</span><span>asstring&nbsp;</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">',&nbsp;'</span><span style="color: #800080; ">+</span><span>N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'translations'</span><span style="color: #800080; ">].</span><span>keys</span><span style="color: #800080; ">[</span><span>it</span><span style="color: #800080; ">]);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'parse&nbsp;&amp;&nbsp;check&nbsp;JSON:&nbsp;'</span><span style="color: #800080; ">+</span><span>botostr</span><span style="color: #800080; ">(</span><span>N</span><span style="color: #800080; ">.</span><span>Check</span><span style="color: #800080; ">(</span><span>savestr</span><span style="color: #800080; ">,</span><span>&nbsp;false</span><span style="color: #800080; ">)));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writ(botostr(N.CheckException('{&quot;k&quot;:1,&nbsp;&quot;k&quot;:2}',&nbsp;false&nbsp;)));&nbsp;//&nbsp;Answer&nbsp;will&nbsp;be&nbsp;false</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span>botostr</span><span style="color: #800080; ">(</span><span>N</span><span style="color: #800080; ">.</span><span>CheckException</span><span style="color: #800080; ">(</span><span>savestr</span><span style="color: #800080; ">,</span><span>&nbsp;false&nbsp;</span><span style="color: #800080; ">)));</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>ExceptionToString</span><span style="color: #800080; ">(</span><span>ExceptionType</span><span style="color: #800080; ">,</span><span>&nbsp;ExceptionParam</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writ('parse&amp;check&nbsp;JSON:'+botostr(N.Check(utf8decode(loadfile(Exepath+'\restcountrieskeysutf812.txt')),false)));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//E:&nbsp;Exception:&nbsp;&lt;TJsonValue&gt;&quot;translations&quot;&nbsp;value&nbsp;type&nbsp;error:&nbsp;jvObject&nbsp;to&nbsp;jvString</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//E:&nbsp;Exception:&nbsp;&lt;TJson&gt;json&nbsp;struct&nbsp;type&nbsp;is&nbsp;not&nbsp;jsObject</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">{&quot;maps&quot;:&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;googleMaps&quot;:&nbsp;&quot;https:\/\/goo.gl\/maps\/uVuZcXaxSx5jLyEC9&quot;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;openStreetMaps&quot;:&nbsp;&quot;https:\/\/www.openstreetmap.org\/relation\/51701&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}//,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">if</span><span>&nbsp;map&nbsp;</span><span style="color: #000000; font-weight: bold; ">then</span><span>&nbsp;openweb</span><span style="color: #800080; ">(</span><span>N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'maps'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'openStreetMaps'</span><span style="color: #800080; ">].</span><span>asstring</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'maps'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'googleMaps'</span><span style="color: #800080; ">].</span><span>asstring</span><span style="color: #800080; ">);</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>N</span><span style="color: #800080; ">[</span><span style="color: #008080; ">'name'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'maps'</span><span style="color: #800080; ">][</span><span style="color: #008080; ">'openStreetMaps'</span><span style="color: #800080; ">].</span><span>asstring</span><span style="color: #800080; ">);</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span>&nbsp;N</span><span style="color: #800080; ">.</span><span>Path</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'name/maps/openStreetMaps'</span><span style="color: #800080; ">).</span><span>AsString</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">except</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'E:&nbsp;'</span><span style="color: #800080; ">+</span><span>ExceptiontoString</span><span style="color: #800080; ">(</span><span>exceptiontype</span><span style="color: #800080; ">,</span><span>&nbsp;exceptionparam</span><span style="color: #800080; ">));</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapStrm</span><span style="color: #800080; ">.</span><span>Free</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encodURL</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #008080; ">''</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N</span><span style="color: #800080; ">.</span><span>Free</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Job</span><span style="color: #800080; ">.</span><span>Free</span><span style="color: #800080; ">;</span><span>&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;<br><br></span></div><div><span style="color: #000000; font-weight: bold; ">const</span><span>&nbsp;DEF_JSONDECODE&nbsp;</span><span style="color: #800080; ">=</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'def&nbsp;decode_and_print_json(data):&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;#&nbsp;Laden&nbsp;der&nbsp;JSON-Daten&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;decoded_data&nbsp;=&nbsp;json.loads(data)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;#&nbsp;Iterieren&nbsp;durch&nbsp;und&nbsp;Dekodierung&nbsp;der&nbsp;UTF-8&nbsp;Zeichen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;for&nbsp;entry&nbsp;in&nbsp;decoded_data:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;key,&nbsp;value&nbsp;in&nbsp;entry.items():&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entry[key]&nbsp;=&nbsp;value.encode(&quot;latin1&quot;).decode(&quot;utf-8&quot;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;#&nbsp;Darstellung&nbsp;der&nbsp;dekodierten&nbsp;Daten&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;pretty_json=&nbsp;json.dumps(decoded_data,ensure_ascii=False,indent=4)'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;pretty_json&nbsp;&nbsp;#print(pretty_json)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">;<br></span></div><div><span style="color: #000000; font-weight: bold; ">const</span><span>&nbsp;DEF_JSONDECODE2&nbsp;</span><span style="color: #800080; ">=</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'def&nbsp;improve_json_output(json_data):&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;#&nbsp;Decodiere&nbsp;&amp;&nbsp;formatiere&nbsp;die&nbsp;JSON-Daten&nbsp;mit&nbsp;UTF-8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;improved_json=&nbsp;json.dumps(json_data,&nbsp;indent=2,&nbsp;ensure_ascii=False)'</span><span style="color: #800080; ">+</span><span>LF</span><span style="color: #800080; ">+</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'&nbsp;&nbsp;&nbsp;return&nbsp;improved_json&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'</span><span style="color: #800080; ">;<br></span></div><div><span style="color: #000000; font-weight: bold; ">procedure</span><span>&nbsp;PyCodeJSON</span><span style="color: #800080; ">(</span><span>imgpath</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">);</span></div><div><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">with</span><span>&nbsp;TPythonEngine</span><span style="color: #800080; ">.</span><span>Create</span><span style="color: #800080; ">(</span><span style="color: #000000; font-weight: bold; ">Nil</span><span style="color: #800080; ">)</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//pythonhome:=&nbsp;'C:\Users\max\AppData\Local\Programs\Python\Python36-32\';</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;loadDLL</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;ExecString</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'from&nbsp;math&nbsp;import&nbsp;factorial'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;execstr</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'import&nbsp;json'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;execstr</span><span style="color: #800080; ">(</span><span>DEF_JSONDECODE2</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Println</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'py&nbsp;test:&nbsp;'</span><span style="color: #800080; ">+</span><span>EvalStr</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'[n&nbsp;for&nbsp;n&nbsp;in&nbsp;range(5*24)&nbsp;if&nbsp;str(factorial(n)).count(&quot;0&quot;)==23]'</span><span style="color: #800080; ">));</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Println(EvalStr('decode_and_print_json('+JSONDATA+')'));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//Println(EvalStr('improve_json_output('+JSONDATA+')'));</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;raiseError</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">finally</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;unloadDLL</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;free</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span><span>&nbsp;<br>&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span><span>&nbsp;<br><br></span></div><div><span style="color: #000080; font-style: italic; ">{var&nbsp;ESCAPES:&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;of&nbsp;Char;&nbsp;//&nbsp;=&nbsp;['b',&nbsp;'t',&nbsp;'n',&nbsp;'f',&nbsp;'r',&nbsp;'&quot;',&nbsp;'/',&nbsp;'\',&nbsp;'u'&nbsp;];<br>&nbsp;&nbsp;&nbsp;&nbsp;HEXA:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcharset;//&nbsp;=&nbsp;['0'..'9',&nbsp;'A'..'F',&nbsp;'a'..'f'];<br>function&nbsp;escapeChar_(const&nbsp;aStr:&nbsp;string;&nbsp;aPos,&nbsp;aLen:&nbsp;Integer;&nbsp;out&nbsp;aUnk:&nbsp;Boolean):&nbsp;Integer;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style="color: #000000; font-weight: bold; ">type</span></div><div><span>&nbsp;&nbsp;TTTest&nbsp;</span><span style="color: #800080; ">=</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">function</span><span style="color: #800080; ">(</span><span style="color: #000000; font-weight: bold; ">out</span><span>&nbsp;Msg</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">):</span><span>&nbsp;Boolean</span><span style="color: #800080; ">;<br></span></div><div><span style="color: #000000; font-weight: bold; ">procedure</span><span>&nbsp;JCheck</span><span style="color: #800080; ">(</span><span>Test</span><span style="color: #800080; ">:</span><span>&nbsp;TTTest</span><span style="color: #800080; ">;</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">var</span><span>&nbsp;Passed</span><span style="color: #800080; ">,</span><span>&nbsp;Failed</span><span style="color: #800080; ">:</span><span>&nbsp;Integer</span><span style="color: #800080; ">);</span></div><div><span style="color: #000000; font-weight: bold; ">var</span><span>&nbsp;&nbsp;S</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">if</span><span>&nbsp;Test</span><span style="color: #800080; ">(</span><span>S</span><span style="color: #800080; ">)</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">then</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Inc</span><span style="color: #800080; ">(</span><span>Passed</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;WriteLn</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'[PASS]&nbsp;'</span><span style="color: #800080; ">+</span><span>&nbsp;S</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">else</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;Inc</span><span style="color: #800080; ">(</span><span>Failed</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;WriteLn</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'[FAIL]&nbsp;'</span><span style="color: #800080; ">+</span><span>&nbsp;S</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;<br></span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//var&nbsp;&nbsp;&nbsp;IDoc:&nbsp;IHTMLDocument2;</span></div><div><span style="color: #000000; font-weight: bold; ">var</span><span>&nbsp;regEx</span><span style="color: #800080; ">:</span><span>&nbsp;TRegEx</span><span style="color: #800080; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//TPerlRegex&nbsp;or&nbsp;OleVariant&nbsp;if&nbsp;HISUtils;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;DaysDiff</span><span style="color: #800080; ">:</span><span>&nbsp;Double</span><span style="color: #800080; ">;</span><span>&nbsp;TotalPassed</span><span style="color: #800080; ">,</span><span>&nbsp;TotalFailed</span><span style="color: #800080; ">:</span><span>&nbsp;Integer</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//aJsonDoc&nbsp;:&nbsp;TalJsonDocumentU;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;envlist</span><span style="color: #800080; ">:</span><span>&nbsp;Tstringlist</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;instr</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">;</span><span>&nbsp;cnt</span><span style="color: #800080; ">:</span><span>&nbsp;integer</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br></span></div><div><span style="color: #000000; font-weight: bold; ">begin</span><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//@main</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//maxform1.ShellStyle1click(self)</span></div><div><span>&nbsp;&nbsp;maxform1</span><span style="color: #800080; ">.</span><span>Console1Click</span><span style="color: #800080; ">(</span><span>self</span><span style="color: #800080; ">)</span></div><div><span>&nbsp;&nbsp;memo2</span><span style="color: #800080; ">.</span><span>font</span><span style="color: #800080; ">.</span><span>size</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">12</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;writ</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'DebugHeapStatus:&nbsp;'</span><span style="color: #800080; ">+</span><span>DebugHeapStatus</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'Weatherjs&nbsp;capital&nbsp;Bern:&nbsp;'</span><span style="color: #800080; ">+</span><span>GetWeatherStreamJSON</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'Bern,&nbsp;CH'</span><span style="color: #800080; ">,</span><span>WeatherAPIKEY</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;DaysDiff</span><span style="color: #800080; ">:=</span><span>&nbsp;now&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;strtodate</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'20/06/1959'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>FloatToStr</span><span style="color: #800080; ">(</span><span>DaysDiff</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>FloatToStr</span><span style="color: #800080; ">(</span><span>trunc</span><span style="color: #800080; ">(</span><span>DaysDiff</span><span style="color: #800080; ">)));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;DaysDiff&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;DaySpan</span><span style="color: #800080; ">(</span><span>now</span><span style="color: #800080; ">,</span><span>&nbsp;strtodate</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'20/06/1959'</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>FloatToStr</span><span style="color: #800080; ">(</span><span>trunc</span><span style="color: #800080; ">(</span><span>DaysDiff</span><span style="color: #800080; ">)));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>FloatToStr</span><span style="color: #800080; ">((</span><span>DaysDiff</span><span style="color: #800080; ">)));</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//https://www.wolframalpha.com/input?i=difference+now+-+20.06.1959</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//test&nbsp;with&nbsp;https://restcountries.com/v3.1/name/switzerland</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;GetRestCountries_mcJSON3</span><span style="color: #800080; ">(</span><span>RESTCountries</span><span style="color: #800080; ">,</span><span style="color: #008080; ">'Switzerland'</span><span style="color: #800080; ">,</span><span style="color: #008080; ">''</span><span style="color: #800080; ">,</span><span>&nbsp;false</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;PyCodeJSON</span><span style="color: #800080; ">(</span><span style="color: #008080; ">''</span><span style="color: #800080; ">);</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;function&nbsp;Test99(out&nbsp;Msg:&nbsp;string):&nbsp;Boolean;</span></div><div><span>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//https://github.com/maxkleiner/McJSON/tree/main/test&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;JCheck</span><span style="color: #800080; ">(@</span><span>Test99</span><span style="color: #800080; ">,</span><span>&nbsp;TotalPassed</span><span style="color: #800080; ">,</span><span>&nbsp;TotalFailed</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(itoa(JExecute('cmd&nbsp;/C&nbsp;dir&nbsp;*.*',@TTextHandlerQ,&nbsp;true,&nbsp;false)));&nbsp;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(itoa(JExecute('cmd&nbsp;/c&nbsp;wmic&nbsp;cpu&nbsp;get&nbsp;name',@TTextHandlerQ,&nbsp;true,&nbsp;false)));&nbsp;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(GETDOSOutput('cmd.exe&nbsp;/c&nbsp;wmic&nbsp;cpu&nbsp;get&nbsp;architecture','C:\'));</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(itoa(JExecute('cmd&nbsp;/c&nbsp;netstat&nbsp;-o',@TTextHandlerQ,&nbsp;true,&nbsp;false)));&nbsp;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(GETDOSOutput('powershell&nbsp;wget&nbsp;&quot;http://www.softwareschule.ch/examples/1080_trend.pas&quot;','C:\'));</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">(*&nbsp;<br>&nbsp;&nbsp;&nbsp;envlist:=&nbsp;Tstringlist.create;<br>&nbsp;&nbsp;&nbsp;InStr:=&nbsp;loadfile(Exepath+'\restcountrieskeysutf812.txt');<br>&nbsp;&nbsp;&nbsp;//writ(formatJSON(utf8decode(instr)));<br>&nbsp;&nbsp;&nbsp;//getJsonData2(utf8decode(instr),'translations','common');<br>&nbsp;&nbsp;&nbsp;//jSplit(&nbsp;const&nbsp;Delimiter&nbsp;:&nbsp;char;&nbsp;Input&nbsp;:Str;&nbsp;Strings&nbsp;:&nbsp;TStrings);<br>&nbsp;&nbsp;&nbsp;jSplit(&nbsp;'}',&nbsp;utf8decode(instr),&nbsp;envlist);<br>&nbsp;&nbsp;&nbsp;//StrtoList(InStr,&nbsp;envlist,&nbsp;CRLF)<br>&nbsp;&nbsp;&nbsp;writeln('envlist&nbsp;count:&nbsp;'+itoa(envlist.count));<br>&nbsp;&nbsp;&nbsp;cnt:=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;regEx:=&nbsp;TRegEx.create('common&quot;:&quot;[\w]',[rroNotEmpty]);&nbsp;<br>&nbsp;&nbsp;&nbsp;//regEx.regex:='common&nbsp;[\w+:\w:\w&nbsp;:,]+&nbsp;Sui';<br>&nbsp;&nbsp;&nbsp;//&nbsp;Execute&nbsp;search&nbsp;ot&nbsp;TMatch<br>&nbsp;&nbsp;&nbsp;for&nbsp;it:=&nbsp;0&nbsp;to&nbsp;envlist.count-1&nbsp;do&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;regEx.match((envlist[it])).success&nbsp;then&nbsp;begin<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln(itoa(cnt)+':'+envlist[it]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inc(cnt)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;regex.Free;<br>&nbsp;&nbsp;&nbsp;envlist.Free;&nbsp;&nbsp;&nbsp;&nbsp;//*)</span></div><div><span>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//EMcJsonException');</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//SIRegister_TMcJsonItem(CL);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//SIRegister_TMcJsonItemEnumerator(CL);&nbsp;&nbsp;//jetNone&nbsp;)');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//McJsonEscapeString(&nbsp;const&nbsp;aStr&nbsp;:&nbsp;string;&nbsp;aEsc&nbsp;:&nbsp;TJEscapeType)&nbsp;:&nbsp;string');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//McJsonUnEscapeString(&nbsp;const&nbsp;aStr&nbsp;:&nbsp;string)&nbsp;:&nbsp;string');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//GetItemTypeStr(&nbsp;aType&nbsp;:&nbsp;TJItemType)&nbsp;:&nbsp;string');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//GetValueTypeStr(&nbsp;aType&nbsp;:&nbsp;TJValueType)&nbsp;:&nbsp;string');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//escapeChar(const&nbsp;aStr:&nbsp;string;&nbsp;aPos,&nbsp;aLen:&nbsp;Integer;&nbsp;out&nbsp;aUnk:&nbsp;Boolean):&nbsp;Integer;');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//findUtf8BOM(const&nbsp;Stream:&nbsp;TStream):&nbsp;Int64;');</span></div><div><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//writeln(itoa(wdc_GetRemoteFileSize(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style="color: #000000; font-weight: bold; ">End</span><span style="color: #800080; ">.<br></span></div><div><span>Doc</span><span style="color: #800080; ">:</span><span>&nbsp;https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//gitlab.com/amatos/rest-countries/-/blob/master/README.md</span></div><div><span>https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//github.com/maxkleiner/restcountries</span></div><div><span>https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//www.postfinance.ch/en/private/paying-saving/international-payments/giro-international.html?utm_source=newsletter&amp;utm_medium=email&amp;utm_campaign=pknl_5_24<br><br>{&quot;official&quot;:&quot;ÿßŸÑÿßÿ™ÿ≠ÿßÿØ&nbsp;ÿßŸÑÿ≥ŸàŸäÿ≥ÿ±Ÿä&quot;,&quot;common&quot;:&quot;ÿ≥ŸàŸäÿ≥ÿ±ÿß&quot;}</span></div><div><span>zho</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;ÁëûÂ£´ËÅîÈÇ¶&quot;,&quot;common&quot;:&quot;ÁëûÂ£´&quot;}<br></span></div><div><span style="color: #800080; ">ÁëûÂ£´ËÅîÈÇ¶</span><span>&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;Schweizerische&nbsp;Eidgenossenschaft</span></div><div><span style="color: #800080; ">Áëû</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;Rui</span></div><div><span style="color: #800080; ">ÁëûÂ£´</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;Schweiz<br>&nbsp;&nbsp;</span><span style="color: #800080; ">Â£´</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;Gelehrte<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #800080; ">ËÅîÈÇ¶</span><span>&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;f</span><span style="color: #800080; ">√∂</span><span>deral<br>&nbsp;&nbsp;</span><span style="color: #800080; ">Â£´ËÅîÈÇ¶</span><span>&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;F</span><span style="color: #800080; ">√∂</span><span>deration&nbsp;der&nbsp;Ritter&nbsp;&nbsp;&nbsp;<br><br>Ein&nbsp;Telemeter&nbsp;</span><span style="color: #800080; ">(</span><span>von&nbsp;altgriechisch</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #800080; ">œÑ·øÜŒªŒµ</span><span>&nbsp;t</span><span style="color: #800080; ">ƒì</span><span>le&nbsp;</span><span style="color: #800080; ">‚Äû</span><span>fern</span><span style="color: #800080; ">‚Äú</span><span>&nbsp;und&nbsp;</span><span style="color: #800080; ">ŒºŒ≠œÑœÅŒøŒΩ</span><span>&nbsp;m</span><span style="color: #800080; ">√©</span><span>tron&nbsp;</span><span style="color: #800080; ">‚Äû</span><span>Ma</span><span style="color: #800080; ">√ü,</span><span>&nbsp;Ma</span><span style="color: #800080; ">√ü</span><span>stab</span><span style="color: #800080; ">‚Äú)</span><span>&nbsp;ist&nbsp;die&nbsp;Funktion&nbsp;eines&nbsp;Chronographen</span><span style="color: #800080; ">,</span><span>&nbsp;<br>Entfernungen&nbsp;zu&nbsp;Ereignissen&nbsp;zu&nbsp;messen</span><span style="color: #800080; ">,</span><span>&nbsp;die&nbsp;sowohl&nbsp;Licht&nbsp;als&nbsp;auch&nbsp;Schall&nbsp;von&nbsp;sich&nbsp;geben</span><span style="color: #800080; ">.<br></span></div><div><span>This&nbsp;API&nbsp;works&nbsp;the&nbsp;following&nbsp;way</span><span style="color: #800080; ">:</span><span>&nbsp;it&nbsp;offers&nbsp;the&nbsp;service&nbsp;</span><span style="color: #000000; font-weight: bold; ">of</span><span>&nbsp;geocoding</span><span style="color: #800080; ">,</span><span>&nbsp;cartography</span><span style="color: #800080; ">,</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">and</span><span>&nbsp;many&nbsp;other&nbsp;possibilities</span><span style="color: #800080; ">.</span><span>&nbsp;</span></div><div><span style="color: #000000; font-weight: bold; ">In</span><span>&nbsp;our&nbsp;example</span><span style="color: #800080; ">,</span><span>&nbsp;we&nbsp;will&nbsp;use&nbsp;direct&nbsp;geocoding</span><span style="color: #800080; ">.</span><span>&nbsp;We&nbsp;will&nbsp;send&nbsp;the&nbsp;address&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;receive&nbsp;latitude</span><span style="color: #800080; ">,</span><span>&nbsp;longitude</span><span style="color: #800080; ">,</span><span>&nbsp;</span></div><div><span style="color: #000000; font-weight: bold; ">and</span><span>&nbsp;the&nbsp;information&nbsp;we&nbsp;get&nbsp;via&nbsp;the&nbsp;REST&nbsp;Debugger</span><span style="color: #800080; ">.</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">To</span><span>&nbsp;get&nbsp;the&nbsp;response&nbsp;we&nbsp;should&nbsp;configure&nbsp;the&nbsp;JSON&nbsp;root&nbsp;using&nbsp;the&nbsp;data&nbsp;element</span><span style="color: #800080; ">:</span></div><div><span>&nbsp;<br>It&nbsp;looks&nbsp;like&nbsp;they&nbsp;never&nbsp;renewed&nbsp;their&nbsp;SSL&nbsp;certificate</span><span style="color: #800080; ">.</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">In</span><span>&nbsp;the&nbsp;meantime</span><span style="color: #800080; ">,</span><span>&nbsp;<br>you&nbsp;can&nbsp;use&nbsp;https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//restcountries.com/&nbsp;is&nbsp;a&nbsp;cloned&nbsp;repo&nbsp;that&nbsp;I&nbsp;update&nbsp;frecuently<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;we&nbsp;download&nbsp;a&nbsp;script</span><span style="color: #800080; ">-</span><span style="color: #000000; font-weight: bold; ">file</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">in</span><span>&nbsp;powershell&nbsp;</span><span style="color: #000000; font-weight: bold; ">with</span><span>&nbsp;wget&nbsp;Invoke</span><span style="color: #800080; ">-</span><span>WebRequest&nbsp;open&nbsp;the&nbsp;</span><span style="color: #000000; font-weight: bold; ">file</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;check<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;content</span><span style="color: #800080; ">,</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">then</span><span>&nbsp;execute&nbsp;the&nbsp;script&nbsp;</span><span style="color: #000000; font-weight: bold; ">and</span><span>&nbsp;get&nbsp;the&nbsp;result&nbsp;back&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;maXbox</span><span style="color: #800080; ">-</span><span>console&nbsp;</span><span style="color: #000000; font-weight: bold; ">as</span><span>&nbsp;memo2</span><span style="color: #800080; ">.</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hint</span><span style="color: #800080; ">:</span><span>&nbsp;needs&nbsp;a&nbsp;</span><span style="color: #800080; ">\</span><span>examples&nbsp;dir&nbsp;otherwise&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;REPL&nbsp;</span><span style="color: #800080; ">:</span><span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//meet.google.com/pxu-nehx-qzp</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gryzzly&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;gr</span><span style="color: #800080; ">√§</span><span>ulich</span><span style="color: #800080; ">,</span><span>&nbsp;grisly&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;grausig&nbsp;&nbsp;</span><span style="color: #800080; ">(</span><span>ghastly&nbsp;awful</span><span style="color: #800080; ">)</span><span>&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;gr</span><span style="color: #800080; ">√§</span><span>sslich<br><br>&nbsp;&nbsp;&nbsp;https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//rapidapi.com/collection/list-of-free-apis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span>&nbsp;&nbsp;&nbsp;https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//wiki.delphi-jedi.org/wiki/JCL_Help:Execute@string@string@Boolean@PBoolean</span></div><div><span>&nbsp;&nbsp;&nbsp;https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//docs.microsoft.com/en-us/windows/win32/debug/system-error-codes--0-499-<br></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>GETDOSOutput</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'cmd.exe&nbsp;/c&nbsp;wmic&nbsp;cpu&nbsp;get&nbsp;architecture'</span><span style="color: #800080; ">,</span><span style="color: #008080; ">'C:\'</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>GETDOSOutput</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'cmd.exe&nbsp;/c&nbsp;wmic&nbsp;cpu&nbsp;get&nbsp;name'</span><span style="color: #800080; ">,</span><span style="color: #008080; ">'C:\'</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//to&nbsp;monitor&nbsp;tcp&nbsp;spyware&nbsp;over&nbsp;PID&nbsp;-&nbsp;process&nbsp;ID</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;memo2</span><span style="color: #800080; ">.</span><span>setFocus</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">repeat</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>GETDOSOutput</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'cmd.exe&nbsp;/c&nbsp;netstat&nbsp;-o'</span><span style="color: #800080; ">,</span><span style="color: #008080; ">'C:\'</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memo2</span><span style="color: #800080; ">.</span><span>color</span><span style="color: #800080; ">:=</span><span>&nbsp;clsilver</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep</span><span style="color: #800080; ">(</span><span style="color: #FF0000; ">2000</span><span style="color: #800080; ">)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memo2</span><span style="color: #800080; ">.</span><span>color</span><span style="color: #800080; ">:=</span><span>&nbsp;clyellow</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">until</span><span>&nbsp;isKeyPressed</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;memo2</span><span style="color: #800080; ">.</span><span>color</span><span style="color: #800080; ">:=</span><span>&nbsp;clwhite</span><span style="color: #800080; ">;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;writeln</span><span style="color: #800080; ">(</span><span>SysErrorMessage</span><span style="color: #800080; ">(</span><span>GetLastError</span><span style="color: #800080; ">))<br></span></div><div><span>Passwort&nbsp;checker</span><span style="color: #800080; ">?</span><span>&nbsp;https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//haveibeenpwned.com</span></div><div><span>https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//dnslytics.com/spf-lookup&nbsp;&nbsp;<br><br></span></div><div><span>work&nbsp;under&nbsp;Windows&nbsp;</span><span style="color: #FF0000; ">7</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">and</span><span>&nbsp;</span><span style="color: #FF0000; ">8</span><span style="color: #800080; ">,</span><span>&nbsp;which&nbsp;would&nbsp;start&nbsp;the&nbsp;Acrobat&nbsp;Reader&nbsp;</span><span style="color: #000000; font-weight: bold; ">and</span><span>&nbsp;open&nbsp;the&nbsp;</span><span style="color: #000000; font-weight: bold; ">file</span><span>&nbsp;but&nbsp;under<br>Windows&nbsp;</span><span style="color: #FF0000; ">10</span><span>&nbsp;this&nbsp;no&nbsp;longer&nbsp;</span><span style="color: #000000; font-weight: bold; ">is</span><span>&nbsp;the&nbsp;</span><span style="color: #000000; font-weight: bold; ">case</span><span style="color: #800080; ">.</span><span>&nbsp;So&nbsp;the&nbsp;next&nbsp;step&nbsp;was&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;update&nbsp;the&nbsp;call&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;use&nbsp;ShellExecuteEX&nbsp;instead</span><span style="color: #800080; ">.</span></div><div><span>ShellInfo&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">Default</span><span style="color: #800080; ">(</span><span>TShellExecuteInfo</span><span style="color: #800080; ">);</span></div><div><span>ShellInfo</span><span style="color: #800080; ">.</span><span>cbSize&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;SizeOf</span><span style="color: #800080; ">(</span><span>TShellExecuteInfo</span><span style="color: #800080; ">);</span></div><div><span>ShellInfo</span><span style="color: #800080; ">.</span><span>lpFile&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;PChar</span><span style="color: #800080; ">(</span><span>Current_Client_Documents&nbsp;</span><span style="color: #800080; ">+</span><span>&nbsp;FileName&nbsp;</span><span style="color: #800080; ">+</span><span style="color: #008080; ">'.pdf'</span><span style="color: #800080; ">);</span></div><div><span>ShellInfo</span><span style="color: #800080; ">.</span><span>nShow&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;SW_SHOWNORMAL</span><span style="color: #800080; ">;<br></span></div><div><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>ShellExecuteEx</span><span style="color: #800080; ">(@</span><span>ShellInfo</span><span style="color: #800080; ">);<br></span></div><div><span>The&nbsp;actual&nbsp;code&nbsp;will&nbsp;prepare&nbsp;the&nbsp;</span><span style="color: #000000; font-weight: bold; ">Object</span><span>&nbsp;ShellInfo&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;contain&nbsp;all&nbsp;</span><span style="color: #000000; font-weight: bold; ">of</span><span>&nbsp;the&nbsp;necessary&nbsp;data&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;start&nbsp;<br>up&nbsp;the&nbsp;Acrobat&nbsp;Reader&nbsp;</span><span style="color: #000000; font-weight: bold; ">and</span><span>&nbsp;display&nbsp;the&nbsp;generated&nbsp;PDF</span><span style="color: #800080; ">.<br></span></div><div><span>&nbsp;mX4&nbsp;executed</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">30</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">08</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">2022</span><span>&nbsp;</span><span style="color: #FF0000; ">16</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">07</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">02</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF6347; ">2.369</span><span>&nbsp;&nbsp;Memload</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">45</span><span style="color: #800080; ">%</span><span>&nbsp;use<br>&nbsp;mX4&nbsp;executed</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">07</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">09</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">2022</span><span>&nbsp;</span><span style="color: #FF0000; ">09</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">07</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">56</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF6347; ">9.906</span><span>&nbsp;&nbsp;Memload</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">45</span><span style="color: #800080; ">%</span><span>&nbsp;use<br>&nbsp;mX4&nbsp;executed</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">07</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">09</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">2022</span><span>&nbsp;</span><span style="color: #FF0000; ">10</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">23</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">00</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF6347; ">9.134</span><span>&nbsp;&nbsp;Memload</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">45</span><span style="color: #800080; ">%</span><span>&nbsp;use</span></div><div><span style="color: #800080; ">[</span><span>PASS</span><span style="color: #800080; ">]</span><span>&nbsp;Test</span><span style="color: #800080; ">:</span><span>&nbsp;Github&nbsp;readme</span><span style="color: #800080; ">.</span><span>md&nbsp;content&nbsp;ex</span><span style="color: #800080; ">.</span><span>&nbsp;</span><span style="color: #FF0000; ">99</span></div><div><span>&nbsp;mX5</span><span style="color: #800080; ">  </span><span>&nbsp;executed</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">18</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">06</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">2024</span><span>&nbsp;</span><span style="color: #FF0000; ">14</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">38</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">51</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF6347; ">3.830</span><span>&nbsp;&nbsp;Memload</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">73</span><span style="color: #800080; ">%</span><span>&nbsp;use<br>&nbsp;mX5</span><span style="color: #800080; ">  </span><span>&nbsp;executed</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">19</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">06</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">2024</span><span>&nbsp;</span><span style="color: #FF0000; ">17</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">58</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">44</span><span>&nbsp;&nbsp;Runtime</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">:</span><span style="color: #FF6347; ">2.845</span><span>&nbsp;&nbsp;Memload</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">72</span><span style="color: #800080; ">%</span><span>&nbsp;use&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;<br>https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//my6.code.blog/2022/09/02/webpostdata/<br></span></div><div><span>Locomotive&nbsp;</span><span style="color: #800080; ">√©</span><span>lectrique&nbsp;BB26023&nbsp;livr</span><span style="color: #800080; ">√©</span><span>e&nbsp;Corail&nbsp;logo&nbsp;Beffara&nbsp;</span><span style="color: #800080; ">(</span><span>dit&nbsp;nouille</span><span style="color: #800080; ">).</span><span>&nbsp;<br>Immatriculation&nbsp;</span><span style="color: #800080; ">:</span><span>&nbsp;BB26023</span><span style="color: #800080; ">.</span><span>&nbsp;</span><span style="color: #FF0000; ">324712109726</span><span>&nbsp;JOUEF&nbsp;BB26023&nbsp;LOGO&nbsp;beffara&nbsp;ep&nbsp;v&nbsp;sncf&nbsp;oh&nbsp;</span><span style="color: #FF0000; ">1</span><span style="color: #800080; ">/</span><span style="color: #FF0000; ">87</span><span>&nbsp;</span><span style="color: #800080; ">-</span><span>&nbsp;</span><span style="color: #800080; ">¬£</span><span style="color: #FF6347; ">146.67.<br></span></div><div><span>Interpreters&nbsp;usually&nbsp;take&nbsp;less&nbsp;amount&nbsp;</span><span style="color: #000000; font-weight: bold; ">of</span><span>&nbsp;time&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;analyze&nbsp;the&nbsp;source&nbsp;code</span><span style="color: #800080; ">.</span><span>&nbsp;However</span><span style="color: #800080; ">,</span><span>&nbsp;<br>the&nbsp;overall&nbsp;execution&nbsp;time&nbsp;</span><span style="color: #000000; font-weight: bold; ">is</span><span>&nbsp;comparatively&nbsp;slower&nbsp;than&nbsp;compilers</span><span style="color: #800080; ">.</span><span>&nbsp;<br>A&nbsp;compiler&nbsp;scans&nbsp;the&nbsp;entire&nbsp;</span><span style="color: #000000; font-weight: bold; ">program</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">and</span><span>&nbsp;translates&nbsp;it&nbsp;from&nbsp;</span><span style="color: #000000; font-weight: bold; ">object</span><span>&nbsp;code&nbsp;</span><span style="color: #000000; font-weight: bold; ">as</span><span>&nbsp;a&nbsp;whole&nbsp;into&nbsp;machine&nbsp;code</span><span style="color: #800080; ">.</span><span>&nbsp;<br>&nbsp;&nbsp;</span></div><div><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;_______&nbsp;________&quot;,&quot;common&quot;:&quot;______&quot;}<br>{&quot;official&quot;:&quot;Kengevredad&nbsp;Suis&quot;,&quot;common&quot;:&quot;Suis&quot;}<br>{&quot;official&quot;:&quot;_v√Ωcarsk√°&nbsp;konfederace&quot;,&quot;common&quot;:&quot;_v√Ωcarsko&quot;}<br>{&quot;official&quot;:&quot;Swiss&nbsp;Confederation&quot;,&quot;common&quot;:&quot;Switzerland&quot;}<br>{&quot;official&quot;:&quot;Schweizerische&nbsp;Eidgenossenschaft&quot;,&quot;common&quot;:&quot;Schweiz&quot;}<br>{&quot;official&quot;:&quot;_veitsi&nbsp;Konf√∂deratsioon&quot;,&quot;common&quot;:&quot;_veits&quot;}<br>{&quot;official&quot;:&quot;Sveitsin&nbsp;valaliitto&quot;,&quot;common&quot;:&quot;Sveitsi&quot;}<br>{&quot;official&quot;:&quot;Conf√©d√©ration&nbsp;suisse&quot;,&quot;common&quot;:&quot;Suisse&quot;}<br>{&quot;official&quot;:&quot;_vicarska&nbsp;Konfederacija&quot;,&quot;common&quot;:&quot;_vicarska&quot;}<br>{&quot;official&quot;:&quot;Sv√°jc&quot;,&quot;common&quot;:&quot;Sv√°jc&quot;}<br>{&quot;official&quot;:&quot;Confederazione&nbsp;svizzera&quot;,&quot;common&quot;:&quot;Svizzera&quot;}<br>{&quot;official&quot;:&quot;_____&quot;,&quot;common&quot;:&quot;___&quot;}<br>{&quot;official&quot;:&quot;___&nbsp;__&quot;,&quot;common&quot;:&quot;___&quot;}<br>{&quot;official&quot;:&quot;Zwitserse&nbsp;Confederatie&quot;,&quot;common&quot;:&quot;Zwitserland&quot;}<br>{&quot;official&quot;:&quot;__________&nbsp;_____&quot;,&quot;common&quot;:&quot;_____&quot;}<br>{&quot;official&quot;:&quot;Konfederacja&nbsp;Szwajcarska&quot;,&quot;common&quot;:&quot;Szwajcaria&quot;}<br>{&quot;official&quot;:&quot;Confedera√ß√£o&nbsp;Su√≠√ßa&quot;,&quot;common&quot;:&quot;Su√≠√ßa&quot;}<br>{&quot;official&quot;:&quot;___________&nbsp;____________&quot;,&quot;common&quot;:&quot;_________&quot;}<br>{&quot;official&quot;:&quot;_vaj_iarska&nbsp;konfeder√°cia&quot;,&quot;common&quot;:&quot;_vaj_iarsko&quot;}<br>{&quot;official&quot;:&quot;Confederaci√≥n&nbsp;Suiza&quot;,&quot;common&quot;:&quot;Suiza&quot;}<br>{&quot;official&quot;:&quot;__________&nbsp;_____________&quot;,&quot;common&quot;:&quot;__________&quot;}<br>{&quot;official&quot;:&quot;Schweiziska&nbsp;edsf√∂rbundet&quot;,&quot;common&quot;:&quot;Schweiz&quot;}<br>{&quot;official&quot;:&quot;_svi√ßre&nbsp;Konfederasyonu&quot;,&quot;common&quot;:&quot;_svi√ßre&quot;}<br>{&quot;official&quot;:&quot;_____&nbsp;&nbsp;_____&quot;,&quot;common&quot;:&quot;__________&quot;}<br>{&quot;official&quot;:&quot;____&quot;,&quot;common&quot;:&quot;__&quot;}</span></div><div><span>len&nbsp;names&nbsp;borders</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #FF0000; ">5<br></span></div><div><span>ara</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;ÿßŸÑÿßÿ™ÿ≠ÿßÿØ&nbsp;ÿßŸÑÿ≥ŸàŸäÿ≥ÿ±Ÿä&quot;,&quot;common&quot;:&quot;ÿ≥ŸàŸäÿ≥ÿ±ÿß&quot;}</span></div><div><span>bre</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Kengevredad&nbsp;Suis&quot;,&quot;common&quot;:&quot;Suis&quot;}</span></div><div><span>ces</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;≈†v√Ωcarsk√°&nbsp;konfederace&quot;,&quot;common&quot;:&quot;≈†v√Ωcarsko&quot;}</span></div><div><span>cym</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Swiss&nbsp;Confederation&quot;,&quot;common&quot;:&quot;Switzerland&quot;}</span></div><div><span>deu</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Schweizerische&nbsp;Eidgenossenschaft&quot;,&quot;common&quot;:&quot;Schweiz&quot;}</span></div><div><span>est</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;≈†veitsi&nbsp;Konf√∂deratsioon&quot;,&quot;common&quot;:&quot;≈†veits&quot;}</span></div><div><span>fin</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Sveitsin&nbsp;valaliitto&quot;,&quot;common&quot;:&quot;Sveitsi&quot;}</span></div><div><span>fra</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Conf√©d√©ration&nbsp;suisse&quot;,&quot;common&quot;:&quot;Suisse&quot;}</span></div><div><span>hrv</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;≈°vicarska&nbsp;Konfederacija&quot;,&quot;common&quot;:&quot;≈†vicarska&quot;}</span></div><div><span>hun</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Sv√°jc&quot;,&quot;common&quot;:&quot;Sv√°jc&quot;}</span></div><div><span>ita</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Confederazione&nbsp;svizzera&quot;,&quot;common&quot;:&quot;Svizzera&quot;}</span></div><div><span>jpn</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;„Çπ„Ç§„ÇπÈÄ£ÈÇ¶&quot;,&quot;common&quot;:&quot;„Çπ„Ç§„Çπ&quot;}</span></div><div><span>nld</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Zwitserse&nbsp;Confederatie&quot;,&quot;common&quot;:&quot;Zwitserland&quot;}</span></div><div><span>per</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;⁄©ŸÜŸÅÿØÿ±ÿßÿ≥€åŸàŸÜ&nbsp;ÿ≥Ÿàÿ¶€åÿ≥&quot;,&quot;common&quot;:&quot;ÿ≥Ÿàÿ¶€åÿ≥&quot;}</span></div><div><span>pol</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Konfederacja&nbsp;Szwajcarska&quot;,&quot;common&quot;:&quot;Szwajcaria&quot;}</span></div><div><span>por</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;Confedera√ß√£o&nbsp;Su√≠√ßa&quot;,&quot;common&quot;:&quot;Su√≠√ßa&quot;}</span></div><div><span>tur</span><span style="color: #800080; ">,</span><span style="color: #000080; font-style: italic; ">{&quot;official&quot;:&quot;ƒ∞svi√ßre&nbsp;Konfederasyonu&quot;,&quot;common&quot;:&quot;ƒ∞svi√ßre&quot;}</span></div><div><span>&nbsp;&nbsp;&nbsp;</span></div><div><span style="color: #000000; font-weight: bold; ">uses</span></div><div><span>&nbsp;&nbsp;SysUtils</span><span style="color: #800080; ">,</span><span>&nbsp;IdHTTP</span><span style="color: #800080; ">,</span><span>&nbsp;DateUtils</span><span style="color: #800080; ">;<br></span></div><div><span style="color: #000000; font-weight: bold; ">function</span><span>&nbsp;GetTimeFromServer</span><span style="color: #800080; ">(</span><span style="color: #000000; font-weight: bold; ">const</span><span>&nbsp;ServerList</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">array</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">of</span><span>&nbsp;string</span><span style="color: #800080; ">):</span><span>&nbsp;TDateTime</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;i</span><span style="color: #800080; ">:</span><span>&nbsp;Integer</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;IdHTTP</span><span style="color: #800080; ">:</span><span>&nbsp;TIdHTTP</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;Response</span><span style="color: #800080; ">:</span><span>&nbsp;string</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;IdHTTP&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;TIdHTTP</span><span style="color: #800080; ">.</span><span>Create</span><span style="color: #800080; ">(</span><span style="color: #000000; font-weight: bold; ">nil</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">for</span><span>&nbsp;i&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;</span><span style="color: #FF0000; ">0</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">to</span><span>&nbsp;High</span><span style="color: #800080; ">(</span><span>ServerList</span><span style="color: #800080; ">)</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">do</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Versuchen,&nbsp;die&nbsp;Zeit&nbsp;vom&nbsp;aktuellen&nbsp;Server&nbsp;abzurufen</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Response&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;IdHTTP</span><span style="color: #800080; ">.</span><span>Get</span><span style="color: #800080; ">(</span><span>ServerList</span><span style="color: #800080; ">[</span><span>i</span><span style="color: #800080; ">]);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Verarbeiten&nbsp;der&nbsp;Antwort,&nbsp;um&nbsp;die&nbsp;Zeit&nbsp;zu&nbsp;extrahieren&nbsp;(Annahme:&nbsp;Zeit&nbsp;ist&nbsp;direkt&nbsp;im&nbsp;Response)</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;StrToDateTime</span><span style="color: #800080; ">(</span><span>Response</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit</span><span style="color: #800080; ">;</span><span>&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Erfolg,&nbsp;Funktion&nbsp;beenden</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">on</span><span>&nbsp;E</span><span style="color: #800080; ">:</span><span>&nbsp;Exception&nbsp;</span><span style="color: #000000; font-weight: bold; ">do</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;Fehler&nbsp;beim&nbsp;Abrufen&nbsp;der&nbsp;Zeit,&nbsp;zum&nbsp;n√§chsten&nbsp;Server&nbsp;weitergehen</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">if</span><span>&nbsp;i&nbsp;</span><span style="color: #800080; ">=</span><span>&nbsp;High</span><span style="color: #800080; ">(</span><span>ServerList</span><span style="color: #800080; ">)</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">then</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">raise</span><span>&nbsp;Exception</span><span style="color: #800080; ">.</span><span>Create</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'Kein&nbsp;Zeitserver&nbsp;erreichbar'</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">finally</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;IdHTTP</span><span style="color: #800080; ">.</span><span>Free</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;<br></span></div><div><span style="color: #000080; font-style: italic; ">//&nbsp;Beispielaufruf&nbsp;der&nbsp;Funktion</span></div><div><span style="color: #000000; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;TimeServers</span><span style="color: #800080; ">:</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">array</span><span style="color: #800080; ">[</span><span style="color: #FF0000; ">0</span><span style="color: #800080; ">..</span><span style="color: #FF0000; ">3</span><span style="color: #800080; ">]</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">of</span><span>&nbsp;string&nbsp;</span><span style="color: #800080; ">=</span><span>&nbsp;</span><span style="color: #800080; ">(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'http://worldtimeapi.org/api/timezone/Etc/UTC'</span><span style="color: #800080; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'http://worldclockapi.com/api/json/utc/now'</span><span style="color: #800080; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'http://timeapi.io/api/Time/current/zone?timeZone=UTC'</span><span style="color: #800080; ">,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #008080; ">'http://api.timezonedb.com/v2.1/get-time-zone?key=YOUR_API_KEY&amp;format=json&amp;by=zone&amp;zone=UTC'</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;CurrentTime</span><span style="color: #800080; ">:</span><span>&nbsp;TDateTime</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">try</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;CurrentTime&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;GetTimeFromServer</span><span style="color: #800080; ">(</span><span>TimeServers</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;ShowMessage</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'Aktuelle&nbsp;Zeit:&nbsp;'</span><span>&nbsp;</span><span style="color: #800080; ">+</span><span>&nbsp;DateTimeToStr</span><span style="color: #800080; ">(</span><span>CurrentTime</span><span style="color: #800080; ">));</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">except</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">on</span><span>&nbsp;E</span><span style="color: #800080; ">:</span><span>&nbsp;Exception&nbsp;</span><span style="color: #000000; font-weight: bold; ">do</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ShowMessage</span><span style="color: #800080; ">(</span><span style="color: #008080; ">'Fehler:&nbsp;'</span><span>&nbsp;</span><span style="color: #800080; ">+</span><span>&nbsp;E</span><span style="color: #800080; ">.</span><span style="color: #000000; font-weight: bold; ">Message</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;<br></span></div><div><span>Antwort&nbsp;Kap</span><span style="color: #800080; ">.</span><span>&nbsp;</span><span style="color: #FF6347; ">4.1</span></div><div><span style="color: #000000; font-weight: bold; ">function</span><span>&nbsp;getJsonData</span><span style="color: #800080; ">(</span><span>JsonString</span><span style="color: #800080; ">:</span><span>&nbsp;String</span><span style="color: #800080; ">;</span><span>&nbsp;User</span><span style="color: #800080; ">:</span><span>&nbsp;String</span><span style="color: #800080; ">;</span><span>&nbsp;Field</span><span style="color: #800080; ">:</span><span>&nbsp;String</span><span style="color: #800080; ">):</span><span>&nbsp;String</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">var</span></div><div><span>&nbsp;&nbsp;JSonValue</span><span style="color: #800080; ">:</span><span>&nbsp;TJSonValue</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;JsonArray</span><span style="color: #800080; ">:</span><span>&nbsp;TJSONArray</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;ArrayElement</span><span style="color: #800080; ">:</span><span>&nbsp;TJSonValue</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;FoundValue</span><span style="color: #800080; ">:</span><span>&nbsp;TJSonValue</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;Result&nbsp;</span><span style="color: #800080; ">:=</span><span style="color: #008080; ">''</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;create&nbsp;TJSonObject&nbsp;from&nbsp;string</span></div><div><span>&nbsp;&nbsp;JsonValue&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;TJSonObject</span><span style="color: #800080; ">.</span><span>ParseJSONValue</span><span style="color: #800080; ">(</span><span>JsonString</span><span style="color: #800080; ">);<br></span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;get&nbsp;the&nbsp;array</span></div><div><span>&nbsp;&nbsp;JsonArray&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;JsonValue&nbsp;</span><span style="color: #000000; font-weight: bold; ">as</span><span>&nbsp;TJSONArray</span><span style="color: #800080; ">;<br></span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000080; font-style: italic; ">//&nbsp;iterate&nbsp;the&nbsp;array</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">for</span><span>&nbsp;ArrayElement&nbsp;</span><span style="color: #000000; font-weight: bold; ">in</span><span>&nbsp;JsonArray&nbsp;</span><span style="color: #000000; font-weight: bold; ">do</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FoundValue&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;ArrayElement</span><span style="color: #800080; ">.</span><span>FindValue</span><span style="color: #800080; ">(</span><span>User</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">if</span><span>&nbsp;FoundValue&nbsp;</span><span style="color: #800080; ">&lt;&gt;</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">nil</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">then</span><span>&nbsp;</span><span style="color: #000000; font-weight: bold; ">begin</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;</span><span style="color: #800080; ">:=</span><span>&nbsp;ArrayElement</span><span style="color: #800080; ">.</span><span>GetValue</span><span style="color: #800080; ">&lt;</span><span>string</span><span style="color: #800080; ">&gt;(</span><span>User&nbsp;</span><span style="color: #800080; ">+</span><span>&nbsp;</span><span style="color: #008080; ">'.'</span><span>&nbsp;</span><span style="color: #800080; ">+</span><span>&nbsp;Field</span><span style="color: #800080; ">);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span>&nbsp;&nbsp;</span><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;</span></div><div><span style="color: #000000; font-weight: bold; ">end</span><span style="color: #800080; ">;<br></span></div><div><span>https</span><span style="color: #800080; ">:</span><span style="color: #000080; font-style: italic; ">//stackoverflow.com/questions/46534011/delphi-parse-json-array-or-array<br></span></div><div><span>&nbsp;&nbsp;<br>&nbsp;&nbsp;</span><br></div></div><!--EndFragment-->
</body>
</html>